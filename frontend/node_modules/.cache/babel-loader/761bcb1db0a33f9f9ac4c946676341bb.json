{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Documentos/www/product/frontend/src/pages/Product/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiPower, FiTrash2 } from 'react-icons/fi';\nimport api from '../../services/api';\nimport './styles.css';\nexport default function Product() {\n  const {\n    product\n  } = this.state;\n  fetch(api).then(res => res.json()).then(result => {\n    this.setState({\n      product: result\n    });\n  }, error => {\n    this.setState({\n      error\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Product List\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"#ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Product Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"SKU\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, product.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, product.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, product.product_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, product.sku), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, product.price))))));\n}\n/*class ProductList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          products: [],\n          response: {}\n        }\n       \n      }\n\n\n  \n\n  deleteProduct(productId) {\n    const { products } = this.state;\n\n    const apiUrl = 'http://localhost/dev/tcxapp/reactapi/deleteProduct';\n    const formData = new FormData();\n    formData.append('productId', productId);\n\n    const options = {\n      method: 'POST',\n      body: formData\n    }\n\n    fetch(apiUrl, options)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            response: result,\n            products: products.filter(product => product.id !== productId)\n          });\n        },\n        (error) => {\n          this.setState({ error });\n        }\n      )\n  }\n\n  render() {\n    const { error, products} = this.state;\n\n    if(error) {\n      return (\n        <div>Error: {error.message}</div>\n      )\n    } else {\n      return(\n        <div>\n          <h2>Product List</h2>\n          {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>}\n          <Table>\n            <thead>\n              <tr>\n                <th>#ID</th>\n                <th>Product Name</th>\n                <th>SKU</th>\n                <th>Price</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map(product => (\n                <tr key={product.id}>\n                  <td>{product.id}</td>\n                  <td>{product.product_name}</td>\n                  <td>{product.sku}</td>\n                  <td>{product.price}</td>\n                  <td>\n                    <Button variant=\"info\" onClick={() => this.props.editProduct(product.id)}>Edit</Button>\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deleteProduct(product.id)}>Delete</Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )\n    }\n  }\n}\n\nexport default ProductList; */","map":{"version":3,"sources":["/home/alisson/Documentos/www/product/frontend/src/pages/Product/index.js"],"names":["React","useEffect","useState","Link","useHistory","FiPower","FiTrash2","api","Product","product","state","fetch","then","res","json","result","setState","error","map","id","product_name","sku","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAiC,gBAAjC;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAO,cAAP;AAEA,eAAe,SAASC,OAAT,GAAkB;AAE7B,QAAM;AAACC,IAAAA;AAAD,MAAY,KAAKC,KAAvB;AAKQC,EAAAA,KAAK,CAACJ,GAAD,CAAL,CACGK,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,SAAKC,QAAL,CAAc;AACZP,MAAAA,OAAO,EAAEM;AADG,KAAd;AAGD,GAPL,EAQKE,KAAD,IAAW;AACT,SAAKD,QAAL,CAAc;AAAEC,MAAAA;AAAF,KAAd;AACD,GAVL;AAcN,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,OAAO,CAACS,GAAR,CAAYT,OAAO,iBAClB;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACU,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,OAAO,CAACU,EAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,OAAO,CAACW,YAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,OAAO,CAACY,GAAb,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,OAAO,CAACa,KAAb,CAJF,CADD,CADH,CAVF,CAFF,CADF;AA2BD;AASL","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {FiPower, FiTrash2 } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport './styles.css';\n\nexport default function Product(){\n\n    const {product} = this.state;\n  \n     \n       \n        \n            fetch(api)\n              .then(res => res.json())\n              .then(\n                (result) => {\n                  this.setState({\n                    product: result\n                  });\n                },\n                (error) => {\n                  this.setState({ error });\n                }\n              )\n          \n\n      return(\n        <div>\n          <h2>Product List</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>#ID</th>\n                <th>Product Name</th>\n                <th>SKU</th>\n                <th>Price</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {product.map(product => (\n                <tr key={product.id}>\n                  <td>{product.id}</td>\n                  <td>{product.product_name}</td>\n                  <td>{product.sku}</td>\n                  <td>{product.price}</td>\n                 \n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n \n\n            \n\n\n\n\n\n/*class ProductList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          products: [],\n          response: {}\n        }\n       \n      }\n\n\n  \n\n  deleteProduct(productId) {\n    const { products } = this.state;\n\n    const apiUrl = 'http://localhost/dev/tcxapp/reactapi/deleteProduct';\n    const formData = new FormData();\n    formData.append('productId', productId);\n\n    const options = {\n      method: 'POST',\n      body: formData\n    }\n\n    fetch(apiUrl, options)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            response: result,\n            products: products.filter(product => product.id !== productId)\n          });\n        },\n        (error) => {\n          this.setState({ error });\n        }\n      )\n  }\n\n  render() {\n    const { error, products} = this.state;\n\n    if(error) {\n      return (\n        <div>Error: {error.message}</div>\n      )\n    } else {\n      return(\n        <div>\n          <h2>Product List</h2>\n          {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>}\n          <Table>\n            <thead>\n              <tr>\n                <th>#ID</th>\n                <th>Product Name</th>\n                <th>SKU</th>\n                <th>Price</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map(product => (\n                <tr key={product.id}>\n                  <td>{product.id}</td>\n                  <td>{product.product_name}</td>\n                  <td>{product.sku}</td>\n                  <td>{product.price}</td>\n                  <td>\n                    <Button variant=\"info\" onClick={() => this.props.editProduct(product.id)}>Edit</Button>\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deleteProduct(product.id)}>Delete</Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )\n    }\n  }\n}\n\nexport default ProductList; */"]},"metadata":{},"sourceType":"module"}