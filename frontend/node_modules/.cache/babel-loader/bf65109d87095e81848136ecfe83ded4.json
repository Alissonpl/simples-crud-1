{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Documentos/www/product/frontend/src/pages/Product/edit.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport api from \"../../services/api\";\nimport index from '../Product/index';\n\nconst EditUserForm = props => {\n  const [product, setProduct] = useState(props.currentUser);\n  const [id, setId] = useState(props.currentUser.id);\n  const [nome, setNome] = useState(props.currentUser.nome);\n  const [descricao, setDescricao] = useState(props.currentUser.descricao);\n  const [modelo, setModelo] = useState(props.currentUser.modelo);\n  const [marca, setMarca] = useState(props.currentUser.marca);\n  const [tamanho, setTamanho] = useState(props.currentUser.tamanho);\n  const [valor, setValor] = useState(props.currentUser.valor);\n  const [quantidade, setQuantidade] = useState(props.currentUser.quantidade);\n\n  const submitForm = e => {\n    e.preventDefault();\n    updateUser(e);\n  };\n\n  async function updateUser(e) {\n    e.preventDefault();\n    const data = {\n      id: id,\n      nome: nome,\n      descricao: descricao,\n      modelo: modelo,\n      marca: marca,\n      tamanho: tamanho,\n      valor: valor,\n      quantidade: quantidade\n    };\n\n    try {\n      await api.put(`product/${id}`, data);\n      var a = {\n        id: data.id\n      };\n      alert(a.id, data.nome);\n    } catch (err) {\n      alert(\"Erro ao cadastrar Produtos, tente novamente.\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: updateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Producto\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: id,\n    onChange: e => setId(e.target.value),\n    type: \"number\",\n    placeholder: \"Nome do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Producto\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: nome,\n    onChange: e => setNome(e.target.value),\n    type: \"text\",\n    placeholder: \"Nome do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: descricao,\n    onChange: e => setDescricao(e.target.value),\n    type: \"text\",\n    placeholder: \"Descri\\xE7\\xE3o do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: modelo,\n    onChange: e => setModelo(e.target.value),\n    type: \"text\",\n    placeholder: \"Modelo do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: marca,\n    onChange: e => setMarca(e.target.value),\n    type: \"text\",\n    placeholder: \"Marca do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: tamanho,\n    onChange: e => setTamanho(e.target.value),\n    type: \"number\",\n    placeholder: \"Dimens\\xE3o do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: valor,\n    onChange: e => setValor(e.target.value),\n    type: \"number\",\n    placeholder: \"Valor do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: quantidade,\n    onChange: e => setQuantidade(e.target.value),\n    type: \"number\",\n    placeholder: \"Quantidade desse produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, \"update\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"Cancel\"));\n};\n\nexport default EditUserForm;","map":{"version":3,"sources":["/home/alisson/Documentos/www/product/frontend/src/pages/Product/edit.js"],"names":["React","useState","useEffect","Table","Button","Form","api","index","EditUserForm","props","product","setProduct","currentUser","id","setId","nome","setNome","descricao","setDescricao","modelo","setModelo","marca","setMarca","tamanho","setTamanho","valor","setValor","quantidade","setQuantidade","submitForm","e","preventDefault","updateUser","data","put","a","alert","err","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAGA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACQ,KAAK,CAACG,WAAP,CAAtC;AAEA,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcb,QAAQ,CAACQ,KAAK,CAACG,WAAN,CAAkBC,EAAnB,CAA5B;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAACQ,KAAK,CAACG,WAAN,CAAkBG,IAAnB,CAAhC;AAEA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAACQ,KAAK,CAACG,WAAN,CAAkBK,SAAnB,CAA1C;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAACQ,KAAK,CAACG,WAAN,CAAkBO,MAAnB,CAApC;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACQ,KAAK,CAACG,WAAN,CAAkBS,KAAnB,CAAlC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAACQ,KAAK,CAACG,WAAN,CAAkBW,OAAnB,CAAtC;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAACQ,KAAK,CAACG,WAAN,CAAkBa,KAAnB,CAAlC;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAACQ,KAAK,CAACG,WAAN,CAAkBe,UAAnB,CAA5C;;AAMJ,QAAME,UAAU,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,UAAU,CAACF,CAAD,CAAV;AACH,GAJD;;AAOC,iBAAeE,UAAf,CAA0BF,CAA1B,EAA6B;AAE5BA,IAAAA,CAAC,CAACC,cAAF;AACD,UAAME,IAAI,GAAG;AAEVpB,MAAAA,EAAE,EAAEA,EAFM;AAGVE,MAAAA,IAAI,EAAEA,IAHI;AAIVE,MAAAA,SAAS,EAAEA,SAJD;AAKVE,MAAAA,MAAM,EAAEA,MALE;AAMVE,MAAAA,KAAK,EAAEA,KANG;AAOVE,MAAAA,OAAO,EAAEA,OAPC;AAQVE,MAAAA,KAAK,EAAEA,KARG;AASVE,MAAAA,UAAU,EAAEA;AATF,KAAb;;AAYC,QAAI;AACF,YAAMrB,GAAG,CAAC4B,GAAJ,CAAS,WAAUrB,EAAG,EAAtB,EAAyBoB,IAAzB,CAAN;AACA,UAAIE,CAAC,GAAG;AAACtB,QAAAA,EAAE,EAAEoB,IAAI,CAACpB;AAAV,OAAR;AACAuB,MAAAA,KAAK,CAACD,CAAC,CAACtB,EAAH,EAAOoB,IAAI,CAAClB,IAAZ,CAAL;AACD,KAJD,CAIE,OAAOsB,GAAP,EAAY;AACZD,MAAAA,KAAK,CAAC,8CAAD,CAAL;AACD;AACF;;AAGG,sBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEsB,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACV,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADU,eAGV,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,KAAK,EAAEnB,EADT;AAEE,IAAA,QAAQ,EAAGiB,CAAD,IAAOhB,KAAK,CAACgB,CAAC,CAACQ,MAAF,CAASC,KAAV,CAFxB;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,WAAW,EAAC,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHU,CAFtB,eAgBU,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,KAAK,EAAExB,IADT;AAEE,IAAA,QAAQ,EAAGe,CAAD,IAAOd,OAAO,CAACc,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF1B;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAhBV,eA2BU,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,KAAK,EAAEtB,SADT;AAEE,IAAA,QAAQ,EAAGa,CAAD,IAAOZ,YAAY,CAACY,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF/B;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,4BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3BV,eAoCU,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,KAAK,EAAEpB,MADT;AAEE,IAAA,QAAQ,EAAGW,CAAD,IAAOV,SAAS,CAACU,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF5B;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,mBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApCV,eA6CU,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,KAAK,EAAElB,KADT;AAEE,IAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF3B;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7CV,eAsDU,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,KAAK,EAAEhB,OADT;AAEE,IAAA,QAAQ,EAAGO,CAAD,IAAON,UAAU,CAACM,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF7B;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,WAAW,EAAC,wBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtDV,eA+DU,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,KAAK,EAAEd,KADT;AAEE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF3B;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,WAAW,EAAC,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/DV,eAwEU,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,KAAK,EAAEZ,UADT;AAEE,IAAA,QAAQ,EAAGG,CAAD,IAAOF,aAAa,CAACE,CAAC,CAACQ,MAAF,CAASC,KAAV,CAFhC;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,WAAW,EAAC,0BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxEV,eAiFU,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjFV,eAuFgB,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,8BADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvFhB,CADJ;AA8FH,CA/ID;;AAiJA,eAAe/B,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport api from \"../../services/api\";\nimport index from '../Product/index';\n\nconst EditUserForm = props => {\n    const [product, setProduct] = useState(props.currentUser);\n\n    const [id, setId] = useState(props.currentUser.id);\n    const [nome, setNome] = useState(props.currentUser.nome);\n    \n    const [descricao, setDescricao] = useState(props.currentUser.descricao);\n    const [modelo, setModelo] = useState(props.currentUser.modelo);\n    const [marca, setMarca] = useState(props.currentUser.marca);\n    const [tamanho, setTamanho] = useState(props.currentUser.tamanho);\n    const [valor, setValor] = useState(props.currentUser.valor);\n    const [quantidade, setQuantidade] = useState(props.currentUser.quantidade);\n\n\n\n\n\nconst submitForm = e => {\n    e.preventDefault();\n\n    updateUser(e);\n};\n  \n\n async function updateUser(e) {\n\n  e.preventDefault();\n const data = {\n    \n    id: id, \n    nome: nome,\n    descricao: descricao,\n    modelo: modelo,\n    marca: marca,\n    tamanho: tamanho,\n    valor: valor,\n    quantidade: quantidade\n  }\n\n  try {\n    await api.put(`product/${id}`, data);\n    var a = {id: data.id}\n    alert(a.id, data.nome);\n  } catch (err) {\n    alert(\"Erro ao cadastrar Produtos, tente novamente.\");\n  }\n}\n\n\n    return (\n        <Form onSubmit={updateUser}>\n\n                              <Form.Group>\n                    <Form.Label>Producto</Form.Label>\n\n                    <Form.Control\n                      value={id}\n                      onChange={(e) => setId(e.target.value)}\n                      type=\"number\"\n                      placeholder=\"Nome do produto\"\n                    />\n                  </Form.Group>\n\n                \n\n\n                  <Form.Group>\n                    <Form.Label>Producto</Form.Label>\n\n                    <Form.Control\n                      value={nome}\n                      onChange={(e) => setNome(e.target.value)}\n                      type=\"text\"\n                      placeholder=\"Nome do produto\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Control\n                      value={descricao}\n                      onChange={(e) => setDescricao(e.target.value)}\n                      type=\"text\"\n                      placeholder=\"Descrição do produto\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Control\n                      value={modelo}\n                      onChange={(e) => setModelo(e.target.value)}\n                      type=\"text\"\n                      placeholder=\"Modelo do produto\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Control\n                      value={marca}\n                      onChange={(e) => setMarca(e.target.value)}\n                      type=\"text\"\n                      placeholder=\"Marca do produto\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Control\n                      value={tamanho}\n                      onChange={(e) => setTamanho(e.target.value)}\n                      type=\"number\"\n                      placeholder=\"Dimensão do produto\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Control\n                      value={valor}\n                      onChange={(e) => setValor(e.target.value)}\n                      type=\"number\"\n                      placeholder=\"Valor do produto\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Control\n                      value={quantidade}\n                      onChange={(e) => setQuantidade(e.target.value)}\n                      type=\"number\"\n                      placeholder=\"Quantidade desse produto\"\n                    />\n                  </Form.Group>\n\n                  <Button variant=\"primary\" type=\"submit\">\n                    update\n                  </Button>\n\n                  \n\n                        <Button \n                            className=\"waves-effect waves-light btn\"\n                            \n                            >Cancel</Button>\n                </Form>\n    );\n};\n\nexport default EditUserForm;"]},"metadata":{},"sourceType":"module"}