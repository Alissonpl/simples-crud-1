{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Documentos/www/product/frontend/src/pages/Editar/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport api from \"../../services/api\";\nimport index from \"../index\";\n\nconst EditUserForm = props => {\n  const [id, setId] = useState(props.currentUser.id);\n  const [nome, setNome] = useState(props.currentUser.nome);\n  const [descricao, setDescricao] = useState(props.currentUser.descricao);\n  const [modelo, setModelo] = useState(props.currentUser.modelo);\n  const [marca, setMarca] = useState(props.currentUser.marca);\n  const [tamanho, setTamanho] = useState(props.currentUser.tamanho);\n  const [valor, setValor] = useState(props.currentUser.valor);\n  const [quantidade, setQuantidade] = useState(props.currentUser.quantidade);\n  const inicial = {\n    id: null,\n    nome: \"\",\n    descricao: \"\",\n    modelo: \"\",\n    marca: \"\",\n    tamanho: \"\",\n    valor: \"\",\n    quantidade: \"\"\n  };\n  const [currentUser, setCurrentUser] = useState(inicial);\n  const [editing, setEditing] = useState(false);\n\n  const editRow = user => {\n    setEditing(true);\n    setCurrentUser({\n      id: user.id,\n      nome: user.nome,\n      descricao: user.descricao,\n      modelo: user.modelo,\n      marca: user.marca,\n      tamanho: user.tamanho,\n      valor: user.valor,\n      quantidade: user.quantidade\n    });\n  };\n\n  async function updateUser(e) {\n    e.preventDefault();\n    const data = {\n      id,\n      nome,\n      descricao,\n      modelo,\n      marca,\n      tamanho,\n      valor,\n      quantidade\n    };\n\n    try {\n      await api.put(`product/${id}`, data);\n      alert(\"Editado\");\n    } catch (err) {\n      alert(\"Erro ao cadastrar Produtos, tente novamente.\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: updateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: nome,\n    onChange: e => setNome(e.target.value),\n    type: \"text\",\n    placeholder: \"Nome do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: descricao,\n    onChange: e => setDescricao(e.target.value),\n    type: \"text\",\n    placeholder: \"Descri\\xE7\\xE3o do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: modelo,\n    onChange: e => setModelo(e.target.value),\n    type: \"text\",\n    placeholder: \"Modelo do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: marca,\n    onChange: e => setMarca(e.target.value),\n    type: \"text\",\n    placeholder: \"Marca do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: tamanho,\n    onChange: e => setTamanho(e.target.value),\n    type: \"number\",\n    placeholder: \"Dimens\\xE3o do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: valor,\n    onChange: e => setValor(e.target.value),\n    type: \"number\",\n    placeholder: \"Valor do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: quantidade,\n    onChange: e => setQuantidade(e.target.value),\n    type: \"number\",\n    placeholder: \"Quantidade desse produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, \"update\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Cancel\"));\n};\n\nexport default EditUserForm;","map":{"version":3,"sources":["/home/alisson/Documentos/www/product/frontend/src/pages/Editar/index.js"],"names":["React","useState","useEffect","Table","Button","Form","api","index","EditUserForm","props","id","setId","currentUser","nome","setNome","descricao","setDescricao","modelo","setModelo","marca","setMarca","tamanho","setTamanho","valor","setValor","quantidade","setQuantidade","inicial","setCurrentUser","editing","setEditing","editRow","user","updateUser","e","preventDefault","data","put","alert","err","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport api from \"../../services/api\";\nimport index from \"../index\";\n\nconst EditUserForm = (props) => {\n  const [id, setId] = useState(props.currentUser.id);\n  const [nome, setNome] = useState(props.currentUser.nome);\n  const [descricao, setDescricao] = useState(props.currentUser.descricao);\n  const [modelo, setModelo] = useState(props.currentUser.modelo);\n  const [marca, setMarca] = useState(props.currentUser.marca);\n  const [tamanho, setTamanho] = useState(props.currentUser.tamanho);\n  const [valor, setValor] = useState(props.currentUser.valor);\n  const [quantidade, setQuantidade] = useState(props.currentUser.quantidade);\n\n\n\n  const inicial = {\n    id: null,\n    nome: \"\",\n    descricao: \"\",\n    modelo: \"\",\n    marca: \"\",\n    tamanho: \"\",\n    valor: \"\",\n    quantidade: \"\",\n  };\n\n  const [currentUser, setCurrentUser] = useState(inicial);\n  const [editing, setEditing] = useState(false);\n\n  \n\n  const editRow = (user) => {\n    setEditing(true);\n\n    setCurrentUser({\n      id: user.id,\n      nome: user.nome,\n      descricao: user.descricao,\n      modelo: user.modelo,\n      marca: user.marca,\n      tamanho: user.tamanho,\n      valor: user.valor,\n      quantidade: user.quantidade,\n    });\n  };\n\n  async function updateUser(e) {\n    e.preventDefault();\n    const data = {\n      id,\n      nome,\n      descricao,\n      modelo,\n      marca,\n      tamanho,\n      valor,\n      quantidade,\n    };\n    try {\n      await api.put(`product/${id}`, data);\n      alert(\"Editado\");\n    } catch (err) {\n      alert(\"Erro ao cadastrar Produtos, tente novamente.\");\n    }\n  }\n\n  return (\n    <Form onSubmit={updateUser}>\n      <Form.Group>\n        <Form.Control\n          value={nome}\n          onChange={(e) => setNome(e.target.value)}\n          type=\"text\"\n          placeholder=\"Nome do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={descricao}\n          onChange={(e) => setDescricao(e.target.value)}\n          type=\"text\"\n          placeholder=\"Descrição do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={modelo}\n          onChange={(e) => setModelo(e.target.value)}\n          type=\"text\"\n          placeholder=\"Modelo do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={marca}\n          onChange={(e) => setMarca(e.target.value)}\n          type=\"text\"\n          placeholder=\"Marca do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={tamanho}\n          onChange={(e) => setTamanho(e.target.value)}\n          type=\"number\"\n          placeholder=\"Dimensão do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={valor}\n          onChange={(e) => setValor(e.target.value)}\n          type=\"number\"\n          placeholder=\"Valor do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={quantidade}\n          onChange={(e) => setQuantidade(e.target.value)}\n          type=\"number\"\n          placeholder=\"Quantidade desse produto\"\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        update\n      </Button>\n\n      <Button className=\"waves-effect waves-light btn\">Cancel</Button>\n    </Form>\n  );\n};\n\nexport default EditUserForm;\n"]},"metadata":{},"sourceType":"module"}