{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Documentos/www/product/frontend/src/pages/App.js\";\nimport React, { useState, Fragment, useEffect } from 'react';\nimport EditUserForm from './Componentes/form/edit';\nimport UserTable from './Componentes/Table/index';\nimport api from '../services/api';\n\nconst App = () => {\n  // Data\n  const [product, setProduct] = useState([]);\n  useEffect(() => {\n    api.get('product').then(response => {\n      setProduct(response.data);\n    });\n  }, [product]);\n  const usersData = [{\n    id: 1,\n    name: 'Tania',\n    username: 'floppydiskette'\n  }, {\n    id: 2,\n    name: 'Craig',\n    username: 'siliconeidolon'\n  }, {\n    id: 3,\n    name: 'Ben',\n    username: 'benisphere'\n  }];\n  const initialFormState = {\n    id: null,\n    nome: '',\n    descricao: '',\n    modelo: '',\n    marca: '',\n    tamanho: '',\n    valor: '',\n    quantidade: ''\n  }; // Setting state\n\n  const [users, setUsers] = useState(usersData);\n  const [currentUser, setCurrentUser] = useState(initialFormState);\n  const [editing, setEditing] = useState(false); // CRUD operations\n\n  const addUser = user => {\n    user.id = users.length + 1;\n    setUsers([...users, user]);\n  };\n\n  const deleteUser = id => {\n    setEditing(false);\n    setUsers(users.filter(user => user.id !== id));\n  };\n\n  const updateUser = (id, updatedUser) => {\n    setEditing(false);\n    setUsers(users.map(user => user.id === id ? updatedUser : user));\n  };\n\n  const editRow = user => {\n    setEditing(true);\n    setCurrentUser({\n      id: user.id,\n      name: user.name,\n      username: user.username\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, \"CRUD App with Hooks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, editing ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }\n  }, \"Edit user\"), /*#__PURE__*/React.createElement(EditUserForm, {\n    editing: editing,\n    setEditing: setEditing,\n    currentUser: currentUser,\n    updateUser: updateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }\n  }, \"Add user\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }, \"View users\"), /*#__PURE__*/React.createElement(UserTable, {\n    product: product,\n    editRow: editRow,\n    deleteUser: deleteUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/alisson/Documentos/www/product/frontend/src/pages/App.js"],"names":["React","useState","Fragment","useEffect","EditUserForm","UserTable","api","App","product","setProduct","get","then","response","data","usersData","id","name","username","initialFormState","nome","descricao","modelo","marca","tamanho","valor","quantidade","users","setUsers","currentUser","setCurrentUser","editing","setEditing","addUser","user","length","deleteUser","filter","updateUser","updatedUser","map","editRow"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\nimport EditUserForm from './Componentes/form/edit';\nimport UserTable from './Componentes/Table/index';\n\nimport api from '../services/api';\n\nconst App = () => {\n    // Data\n    \n    const [product, setProduct]= useState([]);\n\n    useEffect(()=>{\n\n\n        api.get('product').then(response =>{\n          setProduct(response.data);\n      \n      })\n      \n      }, [product]);\n\n\n\tconst usersData = [\n\t\t{ id: 1, name: 'Tania', username: 'floppydiskette' },\n\t\t{ id: 2, name: 'Craig', username: 'siliconeidolon' },\n\t\t{ id: 3, name: 'Ben', username: 'benisphere' },\n\t]\n\n\tconst initialFormState = { id: null, nome: '', descricao: '', modelo: '', marca: '', tamanho: '', valor: '', quantidade: '' }\n\n\t// Setting state\n\tconst [ users, setUsers ] = useState(usersData)\n\tconst [ currentUser, setCurrentUser ] = useState(initialFormState)\n\tconst [ editing, setEditing ] = useState(false)\n\n\t// CRUD operations\n\tconst addUser = user => {\n\t\tuser.id = users.length + 1\n\t\tsetUsers([ ...users, user ])\n\t}\n\n\tconst deleteUser = id => {\n\t\tsetEditing(false)\n\n\t\tsetUsers(users.filter(user => user.id !== id))\n\t}\n\n\tconst updateUser = (id, updatedUser) => {\n\t\tsetEditing(false)\n\n\t\tsetUsers(users.map(user => (user.id === id ? updatedUser : user)))\n\t}\n\n\tconst editRow = user => {\n\t\tsetEditing(true)\n\n\t\tsetCurrentUser({ id: user.id, name: user.name, username: user.username })\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1>CRUD App with Hooks</h1>\n\t\t\t<div className=\"flex-row\">\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t{editing ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Edit user</h2>\n\t\t\t\t\t\t\t<EditUserForm\n\t\t\t\t\t\t\t\tediting={editing}\n\t\t\t\t\t\t\t\tsetEditing={setEditing}\n\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Add user</h2>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t<h2>View users</h2>\n\t\t\t\t\t<UserTable product={product} editRow={editRow} deleteUser={deleteUser} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}