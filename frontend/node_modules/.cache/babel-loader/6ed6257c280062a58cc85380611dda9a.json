{"ast":null,"code":"var _jsxFileName = \"/home/alisson/Documentos/www/product/frontend/src/pages/Editar/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport api from \"../../services/api\";\nimport index from \"../index\";\nimport { Redirect } from 'react-router';\n\nconst EditUserForm = props => {\n  const [id, setId] = useState(props.currentUser.id);\n  const [nome, setNome] = useState(props.currentUser.nome);\n  const [descricao, setDescricao] = useState(props.currentUser.descricao);\n  const [modelo, setModelo] = useState(props.currentUser.modelo);\n  const [marca, setMarca] = useState(props.currentUser.marca);\n  const [tamanho, setTamanho] = useState(props.currentUser.tamanho);\n  const [valor, setValor] = useState(props.currentUser.valor);\n  const [quantidade, setQuantidade] = useState(props.currentUser.quantidade);\n\n  async function updateUser(e) {\n    e.preventDefault();\n    const data = {\n      id,\n      nome,\n      descricao,\n      modelo,\n      marca,\n      tamanho,\n      valor,\n      quantidade\n    };\n\n    try {\n      await api.put(`product/${id}`, data);\n    } catch (err) {\n      alert(\"Erro ao cadastrar Produtos, tente novamente.\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: updateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: nome,\n    onChange: e => setNome(e.target.value),\n    type: \"text\",\n    placeholder: \"Nome do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: descricao,\n    onChange: e => setDescricao(e.target.value),\n    type: \"text\",\n    placeholder: \"Descri\\xE7\\xE3o do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: modelo,\n    onChange: e => setModelo(e.target.value),\n    type: \"text\",\n    placeholder: \"Modelo do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: marca,\n    onChange: e => setMarca(e.target.value),\n    type: \"text\",\n    placeholder: \"Marca do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: tamanho,\n    onChange: e => setTamanho(e.target.value),\n    type: \"number\",\n    placeholder: \"Dimens\\xE3o do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: valor,\n    onChange: e => setValor(e.target.value),\n    type: \"number\",\n    placeholder: \"Valor do produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: quantidade,\n    onChange: e => setQuantidade(e.target.value),\n    type: \"number\",\n    placeholder: \"Quantidade desse produto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \"update\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Cancel\"));\n};\n\nexport default EditUserForm;","map":{"version":3,"sources":["/home/alisson/Documentos/www/product/frontend/src/pages/Editar/index.js"],"names":["React","useState","useEffect","Table","Button","Form","api","index","Redirect","EditUserForm","props","id","setId","currentUser","nome","setNome","descricao","setDescricao","modelo","setModelo","marca","setMarca","tamanho","setTamanho","valor","setValor","quantidade","setQuantidade","updateUser","e","preventDefault","data","put","err","alert","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport api from \"../../services/api\";\nimport index from \"../index\";\n\nimport { Redirect } from 'react-router';\n\nconst EditUserForm = (props) => {\n  const [id, setId] = useState(props.currentUser.id);\n  const [nome, setNome] = useState(props.currentUser.nome);\n  const [descricao, setDescricao] = useState(props.currentUser.descricao);\n  const [modelo, setModelo] = useState(props.currentUser.modelo);\n  const [marca, setMarca] = useState(props.currentUser.marca);\n  const [tamanho, setTamanho] = useState(props.currentUser.tamanho);\n  const [valor, setValor] = useState(props.currentUser.valor);\n  const [quantidade, setQuantidade] = useState(props.currentUser.quantidade);\n  async function updateUser(e) {\n    e.preventDefault();\n    const data = {\n      id,\n      nome,\n      descricao,\n      modelo,\n      marca,\n      tamanho,\n      valor,\n      quantidade,\n    };\n\n    \n    try {\n      await api.put(`product/${id}`, data);\n      \n      \n    } catch (err) {\n      alert(\"Erro ao cadastrar Produtos, tente novamente.\");\n    }\n  }\n\n  \n  return (\n    <Form onSubmit={updateUser}>\n      \n      <Form.Group>\n        <Form.Control\n          value={nome}\n          onChange={(e) => setNome(e.target.value)}\n          type=\"text\"\n          placeholder=\"Nome do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={descricao}\n          onChange={(e) => setDescricao(e.target.value)}\n          type=\"text\"\n          placeholder=\"Descrição do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={modelo}\n          onChange={(e) => setModelo(e.target.value)}\n          type=\"text\"\n          placeholder=\"Modelo do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={marca}\n          onChange={(e) => setMarca(e.target.value)}\n          type=\"text\"\n          placeholder=\"Marca do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={tamanho}\n          onChange={(e) => setTamanho(e.target.value)}\n          type=\"number\"\n          placeholder=\"Dimensão do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={valor}\n          onChange={(e) => setValor(e.target.value)}\n          type=\"number\"\n          placeholder=\"Valor do produto\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          value={quantidade}\n          onChange={(e) => setQuantidade(e.target.value)}\n          type=\"number\"\n          placeholder=\"Quantidade desse produto\"\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        update\n      </Button>\n\n      <Button className=\"waves-effect waves-light btn\">Cancel</Button>\n    </Form>\n  );\n};\n\nexport default EditUserForm;\n"]},"metadata":{},"sourceType":"module"}